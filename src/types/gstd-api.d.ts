/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/pipelines": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List all pipelines */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description A list of pipelines */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["PipelineListResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
            };
        };
        put?: never;
        /** Create a new pipeline */
        post: {
            parameters: {
                query: {
                    /** @description The name to assign to the new pipeline */
                    name: string;
                    /** @description GST launch syntax describing the pipeline */
                    description: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Pipeline created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
            };
        };
        /** Delete a pipeline */
        delete: {
            parameters: {
                query: {
                    /** @description The name of the pipeline to delete */
                    name: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Pipeline deleted */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
                /** @description Pipeline not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/pipelines/{pipelineName}/graph": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get pipeline graph in GraphViz dot format */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Unique name of the pipeline */
                    pipelineName: components["parameters"]["pipelineName"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Pipeline graph (JSON-wrapped dot) */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
                /** @description Pipeline not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/pipelines/{pipelineName}/elements": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List all elements in a pipeline */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Unique name of the pipeline */
                    pipelineName: components["parameters"]["pipelineName"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description List of elements */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdResponse"] & {
                            response: {
                                nodes: {
                                    name: string;
                                }[];
                            };
                        };
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
                /** @description Pipeline not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/pipelines/{pipelineName}/elements/{elementName}/properties": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List properties of an element */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Unique name of the pipeline */
                    pipelineName: components["parameters"]["pipelineName"];
                    /** @description Unique name of the element */
                    elementName: components["parameters"]["elementName"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description List of properties */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdResponse"] & {
                            response: {
                                nodes: {
                                    name: string;
                                }[];
                            };
                        };
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
                /** @description Pipeline or element not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/pipelines/{pipelineName}/elements/{elementName}/properties/{propertyName}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a property's current value */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Unique name of the pipeline */
                    pipelineName: components["parameters"]["pipelineName"];
                    /** @description Unique name of the element */
                    elementName: components["parameters"]["elementName"];
                    /** @description Name of the element property */
                    propertyName: components["parameters"]["propertyName"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description The value of the property */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdResponse"] & {
                            response: {
                                name: string;
                                value: string;
                                param: {
                                    description: string;
                                    type: string;
                                    access: string;
                                };
                            };
                        };
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
                /** @description Pipeline, element, or property not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
            };
        };
        /** Set a property's value */
        put: {
            parameters: {
                query: {
                    /** @description The new value for the property */
                    name: string;
                };
                header?: never;
                path: {
                    /** @description Unique name of the pipeline */
                    pipelineName: components["parameters"]["pipelineName"];
                    /** @description Unique name of the element */
                    elementName: components["parameters"]["elementName"];
                    /** @description Name of the element property */
                    propertyName: components["parameters"]["propertyName"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Property set */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
                /** @description Pipeline, element, or property not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/pipelines/{pipelineName}/bus/message": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read messages from the pipeline bus */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Unique name of the pipeline */
                    pipelineName: components["parameters"]["pipelineName"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Bus messages */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
                /** @description Pipeline not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/pipelines/{pipelineName}/elements/{elementName}/signals": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List available signals on an element */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Unique name of the pipeline */
                    pipelineName: components["parameters"]["pipelineName"];
                    /** @description Unique name of the element */
                    elementName: components["parameters"]["elementName"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description List of signals */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdResponse"] & {
                            response: {
                                nodes: {
                                    name: string;
                                }[];
                            };
                        };
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
                /** @description Pipeline or element not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/pipelines/{pipelineName}/elements/{elementName}/signals/{signalName}/callback": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Connect to a signal callback */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Unique name of the pipeline */
                    pipelineName: components["parameters"]["pipelineName"];
                    /** @description Unique name of the element */
                    elementName: components["parameters"]["elementName"];
                    /** @description Name of the element signal */
                    signalName: components["parameters"]["signalName"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Signal connected */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
                /** @description Pipeline, element, or signal not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/pipelines/{pipelineName}/elements/{elementName}/signals/{signalName}/disconnect": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Disconnect a signal callback */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Unique name of the pipeline */
                    pipelineName: components["parameters"]["pipelineName"];
                    /** @description Unique name of the element */
                    elementName: components["parameters"]["elementName"];
                    /** @description Name of the element signal */
                    signalName: components["parameters"]["signalName"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Signal disconnected */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
                /** @description Pipeline, element, or signal not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/pipelines/{pipelineName}/event": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Send a seek event */
        put: {
            parameters: {
                query: {
                    /** @description Must be "seek" */
                    name: "seek";
                    /** @description A space-delimited string of rate format flags start-type start end-type end
                     *      */
                    description: string;
                };
                header?: never;
                path: {
                    /** @description Unique name of the pipeline */
                    pipelineName: components["parameters"]["pipelineName"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Seek event posted */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
                /** @description Pipeline not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
            };
        };
        /** Send an event (EOS, flush_start, flush_stop) */
        post: {
            parameters: {
                query: {
                    /** @description Type of event to send */
                    name: "eos" | "flush_start" | "flush_stop";
                };
                header?: never;
                path: {
                    /** @description Unique name of the pipeline */
                    pipelineName: components["parameters"]["pipelineName"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Event posted */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
                /** @description Pipeline not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/pipelines/{pipelineName}/state": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Change pipeline state */
        put: {
            parameters: {
                query: {
                    /** @description Target state */
                    name: "playing" | "paused" | "null";
                };
                header?: never;
                path: {
                    /** @description Unique name of the pipeline */
                    pipelineName: components["parameters"]["pipelineName"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description State changed */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
                /** @description Pipeline not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/pipelines/{pipelineName}/verbose": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Enable or disable verbose mode on a pipeline */
        put: {
            parameters: {
                query: {
                    /** @description true to enable, false to disable */
                    value: boolean;
                };
                header?: never;
                path: {
                    /** @description Unique name of the pipeline */
                    pipelineName: components["parameters"]["pipelineName"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Verbose flag set */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
                /** @description Pipeline not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/debug/enable": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Enable or disable the debug subsystem */
        put: {
            parameters: {
                query: {
                    /** @description true to enable, false to disable */
                    value: boolean;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Debug enabled/disabled */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/debug/reset": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Reset debug thresholds */
        put: {
            parameters: {
                query: {
                    /** @description true to reset thresholds */
                    value: boolean;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Debug thresholds reset */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/debug/threshold": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Set debug message threshold */
        put: {
            parameters: {
                query: {
                    /** @description 0=none,1=ERROR,2=WARNING,…,9=MEMDUMP
                     *      */
                    value: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 9;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Threshold set */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/debug/color": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Enable or disable debug log color */
        put: {
            parameters: {
                query: {
                    /** @description true to enable color, false to disable */
                    value: boolean;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Color flag set */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/pipelines/{pipelineName}/bus/timeout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Set pipeline bus timeout */
        put: {
            parameters: {
                query: {
                    /** @description Timeout in nanoseconds (-1 for infinite), mistyped as name in the API */
                    name: number;
                };
                header?: never;
                path: {
                    /** @description Unique name of the pipeline */
                    pipelineName: components["parameters"]["pipelineName"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Timeout set */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
                /** @description Pipeline not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/pipelines/{pipelineName}/bus/types": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Filter bus message types */
        put: {
            parameters: {
                query: {
                    /** @description Name of the bus message filter, mistyped as name in the API */
                    name: string;
                };
                header?: never;
                path: {
                    /** @description Unique name of the pipeline */
                    pipelineName: components["parameters"]["pipelineName"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Filter applied */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
                /** @description Pipeline not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/pipelines/{pipelineName}/elements/{elementName}/signals/{signalName}/timeout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Set signal wait timeout */
        put: {
            parameters: {
                query: {
                    /** @description Timeout in milliseconds (or other units as supported) */
                    timeout: number;
                };
                header?: never;
                path: {
                    /** @description Unique name of the pipeline */
                    pipelineName: components["parameters"]["pipelineName"];
                    /** @description Unique name of the element */
                    elementName: components["parameters"]["elementName"];
                    /** @description Name of the element signal */
                    signalName: components["parameters"]["signalName"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Signal timeout applied */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
                /** @description Pipeline, element, or signal not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GstdErrorResponse"];
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        GstdResponse: {
            /**
             * @description Status code (0 for success, non-zero for errors)
             * @example 0
             */
            code: number;
            /**
             * @description Human-readable description of the status
             * @example Success
             */
            description: string;
            /** @description The actual response data from the command */
            response: {
                [key: string]: unknown;
            };
        };
        PipelineListResponse: {
            /**
             * @description Status code (0 for success, non-zero for errors)
             * @example 0
             */
            code: number;
            /**
             * @description Human-readable description of the status
             * @example Success
             */
            description: string;
            /** @description Pipeline list containing nodes with names */
            response: {
                /** @description Array of pipeline nodes */
                nodes: {
                    /** @description Pipeline name */
                    name: string;
                }[];
            };
        };
        GstdErrorResponse: {
            /**
             * @description Error code (non-zero value)
             * @example -1
             */
            code: number;
            /**
             * @description Human-readable error description
             * @example Pipeline not found
             */
            description: string;
            /** @description Additional error details (may be null or empty) */
            response?: {
                [key: string]: unknown;
            } | null;
        };
        ElementProperty: {
            /** @description Property name */
            name?: string;
            /** @description Current property value */
            value?: string;
            param_spec?: {
                /** @description Property description */
                blurb?: string;
                /** @description Property type (e.g., gchararray, gint, gboolean) */
                type?: string;
                /** @description Access flags for the property */
                access?: string;
                /** @description Whether this is a construct property */
                construct?: boolean;
            };
        };
    };
    responses: never;
    parameters: {
        /** @description Unique name of the pipeline */
        pipelineName: string;
        /** @description Unique name of the element */
        elementName: string;
        /** @description Name of the element property */
        propertyName: string;
        /** @description Name of the element signal */
        signalName: string;
    };
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
